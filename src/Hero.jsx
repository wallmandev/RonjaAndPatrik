import React, { useEffect, useState } from "react";
import './Hero.scss';

function Hero() {
    const [isScrolled, setIsScrolled] = useState(false);  
    const [hasVisited, setHasVisited] = useState(false);  

    useEffect(() => {
        const sessionVisited = sessionStorage.getItem("hasVisited");

        if (sessionVisited) {
            setHasVisited(true);
        } else {
            setHasVisited(false);
        }

        const handleScroll = () => {
            const scrollPosition = window.scrollY;
            const windowHeight = window.innerHeight;

            if (scrollPosition > windowHeight / 2) {
                setIsScrolled(true);
                setHasVisited(true);
                sessionStorage.setItem("hasVisited", true);
            }
        };

        window.addEventListener('scroll', handleScroll);

        return () => {
            window.removeEventListener('scroll', handleScroll);
        };
    }, [hasVisited]);
    

    return (
        <>
            {!hasVisited && (
                <section className={`hero hero--second ${isScrolled ? 'hidden' : ''}`}>
                    <div className="hero-inner__content">
                        <h3 className="hero-inner__topic-ronja">Ronja Lejonqvist</h3>
                        <p className="hero-inner__topic-and">AND</p>
                        <h3 className="hero-inner__topic-patrik">Patrik Gaerdbo</h3>
                    </div>
                    <div className="hero-image1">
                        <img src={`${import.meta.env.BASE_URL}images/Untitled (500 x 500 px).png`} alt="flowers" className="hero-image1__item1" />
                    </div> 
                    <div className="hero-image2">
                        <img src={`${import.meta.env.BASE_URL}images/Untitled (500 x 500 px).png`} alt="flowers" className="hero-image2__item2" />
                    </div>
                    <div className="scroll-down">
                        <span className="arrow"></span>
                    </div>
                </section>
            )}

            <section className={`hero hero--first ${isScrolled || hasVisited ? 'visible' : ''}`}>
                <div className="hero-inner">
                    <div className="hero-inner__image-container">
                        <img className="hero-randp" src="./images/IMG_4493.JPG" />
                    </div>
                    <h1 className={`hero-inner__topic ${isScrolled || hasVisited ? 'fade-in' : ''}`}>We are getting married</h1>
                </div>
            </section>
        </>
    );
}

export default Hero;



// import React, { useEffect, useState } from "react";
// import './Hero.scss';
// import Header from "./Header";

// function Hero() {
//     const [isScrolled, setIsScrolled] = useState(false);  
//     const [hasVisited, setHasVisited] = useState(false);  

//     useEffect(() => {
//         const sessionVisited = sessionStorage.getItem("hasVisited");

//         if (sessionVisited) {
//             setHasVisited(true);
//         } else {
//             setHasVisited(false);
//         }

//         const handleScroll = () => {
//             const scrollPosition = window.scrollY;
//             const windowHeight = window.innerHeight;

//             // Om vi scrollar förbi hero--second, markera att vi har besökt sidan
//             if (scrollPosition > windowHeight / 2) {
//                 setIsScrolled(true);
//                 setHasVisited(true);
//                 sessionStorage.setItem("hasVisited", true);
//             }
//         };

//         window.addEventListener('scroll', handleScroll);

//         return () => {
//             window.removeEventListener('scroll', handleScroll);
//         };
//     }, [hasVisited]);

//     return (
//         <>
//             {/* <Header headerVisible={isScrolled} /> */}
//             {/* Visa hero--second om sidan inte har besökts tidigare */}
//             {!hasVisited && (
//                 <section className={`hero hero--second ${isScrolled ? 'hidden' : ''}`}>
//                     <div className="hero-inner__content">
//                         <svg width="73" height="62" viewBox="0 0 73 62" fill="none" xmlns="http://www.w3.org/2000/svg">
//                             <path d="M71.6787 25.864C71.8494 25.8 72.0094 25.8107 72.1587 25.896C72.3081 25.96 72.4041 26.0773 72.4467 26.248C72.5107 26.3973 72.5107 26.5467 72.4467 26.696C70.1641 31.4107 68.1267 33.768 66.3347 33.768C66.2281 33.768 66.1107 33.7573 65.9827 33.736C64.5534 33.4587 63.6681 31.5387 63.3267 27.976C62.2814 29.384 61.3534 30.536 60.5427 31.432C59.8174 32.2 59.1987 32.4667 58.6867 32.232C58.1747 32.04 57.9294 31.4853 57.9507 30.568C57.9507 29.8 58.1214 28.8827 58.4627 27.816C58.8041 26.7493 59.3054 25.7147 59.9667 24.712C60.6281 23.7093 61.3427 23.08 62.1107 22.824C63.2414 22.4187 64.2867 22.792 65.2467 23.944C65.3534 24.072 65.3961 24.2213 65.3747 24.392C65.3747 24.5627 65.3107 24.7013 65.1827 24.808C65.0547 24.9147 64.9054 24.968 64.7347 24.968C64.5641 24.9467 64.4254 24.872 64.3187 24.744C63.5721 23.848 62.8147 23.6773 62.0467 24.232C61.1721 24.8507 60.4361 25.9707 59.8387 27.592C59.2627 29.192 59.0387 30.3333 59.1667 31.016C59.2947 30.9093 59.4441 30.7707 59.6147 30.6C60.4681 29.6827 61.5134 28.3707 62.7507 26.664C63.0281 26.28 63.2201 26.0133 63.3267 25.864C63.4974 25.6507 63.7214 25.5867 63.9987 25.672C64.2761 25.736 64.4254 25.9173 64.4467 26.216C64.4894 27.2613 64.5747 28.1893 64.7027 29C64.8307 29.8107 64.9587 30.4293 65.0867 30.856C65.2147 31.2613 65.3641 31.6027 65.5347 31.88C65.7054 32.1573 65.8334 32.3387 65.9187 32.424C66.0254 32.488 66.1321 32.52 66.2387 32.52C66.5374 32.584 66.9107 32.4453 67.3587 32.104C67.8281 31.7413 68.4147 31.0587 69.1187 30.056C69.8441 29.032 70.5801 27.7413 71.3267 26.184C71.4121 26.0133 71.5294 25.9067 71.6787 25.864Z" fill="black"/>
//                             <path d="M59.8522 25.768C60.0229 25.7893 60.1509 25.8747 60.2362 26.024C60.3429 26.152 60.3749 26.3013 60.3323 26.472C60.2896 26.6427 60.2042 26.7707 60.0762 26.856C56.3002 29.3093 53.2069 31.752 50.7962 34.184C49.5376 41.6933 48.1509 47.8053 46.6362 52.52C44.8869 58.0453 43.1802 61.0427 41.5162 61.512C41.3456 61.5547 41.1856 61.576 41.0362 61.576C40.5456 61.576 40.1189 61.352 39.7562 60.904C39.1589 60.1573 38.8389 58.888 38.7962 57.096C38.7322 55.3253 39.0096 53.2347 39.6282 50.824C40.2256 48.4347 41.1109 46.1093 42.2842 43.848C44.2896 39.9867 46.7429 36.5627 49.6442 33.576C50.1349 30.6747 50.6042 27.6027 51.0522 24.36C51.0736 24.2107 51.1482 24.0827 51.2762 23.976C51.4042 23.8693 51.5536 23.8267 51.7242 23.848C51.8949 23.8693 52.0336 23.9547 52.1402 24.104C52.2469 24.232 52.2896 24.3813 52.2682 24.552C51.9056 27.1973 51.5322 29.7253 51.1482 32.136C53.3456 30.088 56.0976 27.9867 59.4042 25.832C59.5322 25.7467 59.6816 25.7253 59.8522 25.768ZM45.4842 52.136C46.8282 47.9333 48.0869 42.4933 49.2602 35.816C46.9776 38.376 45.0149 41.2453 43.3722 44.424C42.4549 46.1947 41.7189 47.9867 41.1642 49.8C40.6096 51.6347 40.2682 53.224 40.1402 54.568C40.0122 55.9333 40.0016 57.1067 40.1082 58.088C40.2149 59.0693 40.4176 59.752 40.7162 60.136C40.8656 60.3067 41.0149 60.3707 41.1642 60.328C41.2709 60.2853 41.3882 60.2213 41.5162 60.136C41.6442 60.0507 41.8576 59.8267 42.1562 59.464C42.4549 59.1227 42.7536 58.6853 43.0522 58.152C43.3509 57.6187 43.7242 56.8187 44.1722 55.752C44.5989 54.7067 45.0362 53.5013 45.4842 52.136ZM51.8842 19.688C51.2656 19.6667 51.0736 19.432 51.3082 18.984C51.5002 18.6 51.7882 18.344 52.1722 18.216C52.6842 18.0453 52.9936 18.1733 53.1002 18.6C53.2069 19.0267 53.0469 19.3467 52.6202 19.56C52.4069 19.6667 52.1616 19.7093 51.8842 19.688Z" fill="black"/>
//                             <path d="M51.1668 25.8C51.3374 25.7573 51.4974 25.7787 51.6468 25.864C51.7961 25.9493 51.8921 26.0773 51.9347 26.248C51.9774 26.3973 51.9561 26.5467 51.8708 26.696C51.1454 27.976 50.5161 28.9893 49.9827 29.736C49.4494 30.4827 48.9054 31.0693 48.3507 31.496C47.7961 31.9227 47.2521 32.104 46.7188 32.04C45.6521 31.912 44.8094 30.76 44.1908 28.584C43.7428 27.112 43.3587 26.376 43.0387 26.376C42.9747 26.3547 42.8788 26.3867 42.7508 26.472C42.6441 26.536 42.4627 26.728 42.2067 27.048C41.9507 27.3467 41.6628 27.7627 41.3428 28.296C41.0441 28.8293 40.6388 29.6187 40.1268 30.664C39.6361 31.7093 39.1027 32.9467 38.5267 34.376C38.4201 34.632 38.2281 34.76 37.9507 34.76C37.9081 34.76 37.8654 34.7493 37.8228 34.728C37.4601 34.6427 37.3001 34.4187 37.3428 34.056C37.5561 32.3067 38.3561 29.0533 39.7427 24.296C39.8921 23.8053 39.9988 23.432 40.0628 23.176C40.1268 23.0053 40.2334 22.888 40.3828 22.824C40.5321 22.7387 40.6814 22.7173 40.8307 22.76C41.0014 22.8027 41.1294 22.8987 41.2147 23.048C41.3001 23.1973 41.3107 23.3573 41.2467 23.528C41.2041 23.6773 41.0974 24.0507 40.9268 24.648C40.4574 26.2907 40.0947 27.5707 39.8387 28.488C40.5214 27.208 41.1187 26.3227 41.6307 25.832C42.1427 25.3413 42.6334 25.1067 43.1027 25.128C43.6574 25.1493 44.0947 25.4373 44.4147 25.992C44.7561 26.5467 45.0761 27.304 45.3747 28.264C45.8441 29.9067 46.3454 30.76 46.8787 30.824C47.1347 30.8667 47.4441 30.728 47.8068 30.408C48.1908 30.0667 48.5961 29.5867 49.0228 28.968C49.4494 28.328 49.7694 27.8267 49.9827 27.464C50.2174 27.1013 50.4841 26.6427 50.7827 26.088C50.8681 25.9387 50.9961 25.8427 51.1668 25.8Z" fill="black"/>
//                             <path d="M39.6367 25.896C39.8074 25.8747 39.9567 25.9173 40.0847 26.024C40.2341 26.1307 40.3194 26.2693 40.3407 26.44C40.3621 26.6107 40.3194 26.76 40.2127 26.888C39.3381 28.0187 38.2927 28.904 37.0767 29.544C35.8607 30.184 34.7194 30.3867 33.6527 30.152C33.3541 30.8773 32.9381 31.4533 32.4047 31.88C31.8714 32.2853 31.3167 32.488 30.7407 32.488H30.7087C30.1327 32.4667 29.6207 32.2747 29.1727 31.912C28.7461 31.528 28.4474 31.0053 28.2767 30.344C27.9994 29.2987 28.0527 28.3067 28.4367 27.368C28.7994 26.408 29.3327 25.704 30.0367 25.256C30.1861 25.1493 30.3567 25.128 30.5487 25.192C30.7407 24.7227 31.0074 24.36 31.3487 24.104C31.7114 23.848 32.0847 23.752 32.4687 23.816C32.6821 23.8587 32.8741 23.9547 33.0447 24.104C33.2367 24.232 33.4181 24.4453 33.5887 24.744C33.7807 25.0427 33.9194 25.5013 34.0047 26.12C34.0901 26.7387 34.1114 27.4747 34.0687 28.328C34.0474 28.5413 34.0154 28.7547 33.9727 28.968C34.7834 29.1387 35.6794 28.936 36.6607 28.36C37.6634 27.784 38.5167 27.0373 39.2207 26.12C39.3274 25.992 39.4661 25.9173 39.6367 25.896ZM30.7407 31.24C31.0394 31.24 31.3487 31.1013 31.6687 30.824C32.0101 30.5467 32.2874 30.1733 32.5007 29.704C31.1141 28.936 30.3887 27.8907 30.3247 26.568C29.8981 26.9733 29.5994 27.5173 29.4287 28.2C29.2794 28.8827 29.2901 29.48 29.4607 29.992C29.6954 30.824 30.1221 31.24 30.7407 31.24ZM32.8207 28.264C32.8634 27.752 32.8634 27.3147 32.8207 26.952C32.7994 26.568 32.7674 26.2587 32.7247 26.024C32.6821 25.7893 32.6287 25.5973 32.5647 25.448C32.5007 25.2987 32.4367 25.192 32.3727 25.128C32.3301 25.064 32.2981 25.032 32.2767 25.032H32.2447C32.1594 25.032 32.0527 25.1067 31.9247 25.256C31.7967 25.384 31.7007 25.5653 31.6367 25.8C31.5087 26.248 31.5301 26.7067 31.7007 27.176C31.8714 27.6453 32.2447 28.072 32.8207 28.456C32.8207 28.392 32.8207 28.328 32.8207 28.264Z" fill="black"/>
//                             <path d="M30.808 40.616C30.9787 40.5947 31.128 40.6373 31.256 40.744C31.4053 40.8507 31.48 40.9893 31.48 41.16C31.5013 41.3307 31.4587 41.4907 31.352 41.64C30.2213 43.0267 29.0267 43.72 27.768 43.72C27.7253 43.72 27.6827 43.72 27.64 43.72C27.192 43.72 26.744 43.624 26.296 43.432C25.848 43.2613 25.3787 42.9733 24.888 42.568C24.4187 42.184 24.0027 41.8107 23.64 41.448C23.2773 41.0853 22.8187 40.552 22.264 39.848C21.7307 39.144 21.304 38.5787 20.984 38.152C20.664 37.7253 20.1947 37.064 19.576 36.168C18.68 34.9307 17.976 33.9707 17.464 33.288C16.9733 32.6053 16.3013 31.7627 15.448 30.76C14.5947 29.7573 13.784 28.9253 13.016 28.264C11.7147 28.584 10.4347 28.7333 9.176 28.712C6.57333 39.3573 5.06933 46.12 4.664 49C4.728 48.8507 4.80266 48.68 4.888 48.488C4.952 48.3387 5.05866 48.232 5.208 48.168C5.37866 48.104 5.53866 48.104 5.688 48.168C5.85866 48.2533 5.96533 48.3707 6.008 48.52C6.072 48.6907 6.072 48.8507 6.008 49C5.79466 49.4907 5.60266 49.8853 5.432 50.184C5.28266 50.4827 5.13333 50.7493 4.984 50.984C4.83466 51.2187 4.68533 51.3893 4.536 51.496C4.408 51.6027 4.26933 51.656 4.12 51.656C4.03466 51.656 3.94933 51.6347 3.864 51.592C3.672 51.528 3.53333 51.4107 3.448 51.24C3.36266 51.0907 3.32 50.7493 3.32 50.216C3.32 49.704 3.40533 48.9573 3.576 47.976C3.74666 46.9947 4.00266 45.6613 4.344 43.976C4.70666 42.2907 5.176 40.2 5.752 37.704C6.328 35.208 7.05333 32.1787 7.928 28.616C6.84 28.488 5.976 28.2107 5.336 27.784C4.696 27.3573 4.29066 26.8667 4.12 26.312C3.864 25.5653 4.056 24.9467 4.696 24.456C5.61333 23.7307 7.032 23.7093 8.952 24.392C9.22933 23.304 9.496 22.2053 9.752 21.096C11.5867 13.6293 12.7493 8.808 13.24 6.632C13.2827 6.46133 13.368 6.33333 13.496 6.248C13.6453 6.14133 13.8053 6.10933 13.976 6.152C14.1467 6.19466 14.2747 6.29066 14.36 6.44C14.4453 6.568 14.4773 6.71733 14.456 6.888C13.9653 9.08533 12.8027 13.9173 10.968 21.384C10.5627 22.9627 10.2747 24.136 10.104 24.904C10.6373 25.16 11.1813 25.448 11.736 25.768C12.248 26.088 12.7707 26.4613 13.304 26.888C15.6507 26.2267 17.944 25.032 20.184 23.304C22.424 21.576 24.3973 19.2613 26.104 16.36C27.4693 14.056 28.312 11.848 28.632 9.736C28.952 7.624 28.7067 5.90666 27.896 4.584C26.68 2.664 24.3653 1.82133 20.952 2.056C19.2667 2.16266 17.496 2.52533 15.64 3.144C13.784 3.74133 12.0453 4.49866 10.424 5.416C8.824 6.33333 7.352 7.38933 6.008 8.584C4.68533 9.77867 3.672 10.9947 2.968 12.232C1.60266 14.6213 1.464 16.8933 2.552 19.048C2.616 19.1973 2.616 19.3573 2.552 19.528C2.50933 19.6773 2.41333 19.7947 2.264 19.88C2.11466 19.944 1.95466 19.9547 1.784 19.912C1.63466 19.848 1.51733 19.7413 1.432 19.592C0.151998 17.032 0.301331 14.376 1.88 11.624C2.904 9.832 4.44 8.136 6.488 6.536C8.55733 4.936 10.8613 3.624 13.4 2.6C15.96 1.576 18.456 0.978665 20.888 0.807998C24.792 0.551998 27.4693 1.59733 28.92 3.944C29.8587 5.45866 30.168 7.38933 29.848 9.736C29.5493 12.0613 28.6533 14.4827 27.16 17C25.1547 20.4133 22.584 23.1867 19.448 25.32C17.8267 26.4507 16.152 27.304 14.424 27.88C15.128 28.5413 15.8747 29.352 16.664 30.312C17.4747 31.272 18.1147 32.0827 18.584 32.744C19.0747 33.384 19.736 34.2907 20.568 35.464C21.2507 36.4027 21.7627 37.1067 22.104 37.576C22.4453 38.0667 22.9147 38.6747 23.512 39.4C24.1093 40.1467 24.6 40.7013 24.984 41.064C25.3893 41.4267 25.8373 41.7467 26.328 42.024C26.8187 42.3227 27.2667 42.4827 27.672 42.504C28.568 42.5253 29.4853 41.9707 30.424 40.84C30.5307 40.712 30.6587 40.6373 30.808 40.616ZM5.272 25.96C5.336 26.1733 5.48533 26.376 5.72 26.568C5.95466 26.76 6.28533 26.9413 6.712 27.112C7.16 27.2613 7.66133 27.368 8.216 27.432C8.36533 26.8347 8.51466 26.2373 8.664 25.64C7.78933 25.2987 7.064 25.128 6.488 25.128C6.04 25.128 5.688 25.224 5.432 25.416C5.26133 25.5653 5.208 25.7467 5.272 25.96ZM9.464 27.464C10.2107 27.464 10.968 27.3893 11.736 27.24C11.5227 27.0907 11.3093 26.952 11.096 26.824C10.6907 26.5893 10.2533 26.3547 9.784 26.12C9.63466 26.7387 9.528 27.1867 9.464 27.464Z" fill="black"/>
//                          </svg>
//                         {/* <h3 className="hero-inner__topic-ronja">Ronja Lejonqvist</h3>
//                         <p className="hero-inner__topic-and">AND</p>
//                         <h3 className="hero-inner__topic-patrik">Patrik Gaerdbo</h3> */}
//                     </div>
//                     <div className="hero-image1">
//                         <img src={`${import.meta.env.BASE_URL}images/Untitled (500 x 500 px).png`} alt="flowers" className="hero-image1__item1" />
//                     </div> 
//                     <div className="hero-image2">
//                         <img src={`${import.meta.env.BASE_URL}images/Untitled (500 x 500 px).png`} alt="flowers" className="hero-image2__item2" />
//                     </div>
//                     <div className="scroll-down">
//                         <span className="arrow"></span>
//                     </div>
//                 </section>
//             )}

//             {/* Visa hero--first när man scrollar eller om man har besökt sidan tidigare */}
//             <section className={`hero hero--first ${isScrolled || hasVisited ? 'visible' : ''}`}>
//                 <div className="hero-inner">
//                     <div className="hero-inner__image-container">
//                         <img className="hero-randp" src="./images/IMG_4493.JPG" />
//                     </div>
//                     <h1 className={`hero-inner__topic ${isScrolled || hasVisited ? 'fade-in' : ''}`}>We are getting married</h1>
//                 </div>
//             </section>
//         </>
//     );
// }

// export default Hero;


// import React, { useEffect, useState } from "react";
// import './Hero.scss';
// import Header from "./Header";

// function Hero() {
//     const [isScrolled, setIsScrolled] = useState(false);  
//     const [hasVisited, setHasVisited] = useState(false);  

//     useEffect(() => {
//         const sessionVisited = sessionStorage.getItem("hasVisited");

//         if (sessionVisited) {
//             setHasVisited(true);
//         } else {
//             setHasVisited(false);
//         }

//         const handleScroll = () => {
//             const scrollPosition = window.scrollY;
//             const windowHeight = window.innerHeight;

//             // Om vi scrollar förbi hero--second, markera att vi har besökt sidan
//             if (scrollPosition > windowHeight / 2) {
//                 setIsScrolled(true);
//                 setHasVisited(true);
//                 sessionStorage.setItem("hasVisited", true);
//             }
//         };

//         window.addEventListener('scroll', handleScroll);

//         return () => {
//             window.removeEventListener('scroll', handleScroll);
//         };
//     }, [hasVisited]);

//     return (
//         <>
//             <Header headerVisible={isScrolled} />
//             {/* Visa hero--second om sidan inte har besökts tidigare */}
//             {!hasVisited && (
//                 <section className={`hero hero--second ${isScrolled ? 'hidden' : ''}`}>
//                     <div className="hero-inner__content">
//                         <h3 className="hero-inner__topic-ronja">Ronja Lejonqvist</h3>
//                         <p className="hero-inner__topic-and">AND</p>
//                         <h3 className="hero-inner__topic-patrik">Patrik Gaerdbo</h3>
//                     </div>
//                     <div className="hero-image1">
//                         <img src={`${import.meta.env.BASE_URL}images/Untitled (500 x 500 px).png`} alt="flowers" className="hero-image1__item1" />
//                     </div> 
//                     <div className="hero-image2">
//                         <img src={`${import.meta.env.BASE_URL}images/Untitled (500 x 500 px).png`} alt="flowers" className="hero-image2__item2" />
//                     </div>
//                     <div className="scroll-down">
//                         <span className="arrow"></span>
//                     </div>
//                 </section>
//             )}

//             {/* Visa hero--first när man scrollar eller om man har besökt sidan tidigare */}
//             <section className={`hero hero--first ${isScrolled || hasVisited ? 'visible' : ''}`}>
//                 <div className="hero-inner">
//                     <div className="hero-inner__image-container">
//                         <img className="hero-randp" src="./images/IMG_4493.JPG" />
//                     </div>
//                     <h1 className={`hero-inner__topic ${isScrolled || hasVisited ? 'fade-in' : ''}`}>We are getting married</h1>
//                 </div>
//             </section>
//         </>
//     );
// }

// export default Hero;